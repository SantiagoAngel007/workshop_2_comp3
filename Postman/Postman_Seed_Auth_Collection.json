{
  "info": {
    "name": "Workshop 2 - Gym API (Con Seeds)",
    "description": "API para pruebas de endpoints del workshop con datos iniciales",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "üå± SEED - Generar datos iniciales",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/seed",
          "host": ["{{base_url}}"],
          "path": ["seed"]
        },
        "description": "Crea 4 roles y 4 usuarios de prueba\n\nCredenciales despu√©s de ejecutar:\n- admin@example.com / admin123 (admin)\n- coach@example.com / coach123 (coach)\n- client@example.com / client123 (client)\n- receptionist@example.com / recep123 (receptionist)"
      },
      "response": []
    },
    {
      "name": "üîê AUTH",
      "item": [
        {
          "name": "Register - Crear usuario",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"usuario@example.com\",\n  \"fullName\": \"Usuario Nuevo\",\n  \"age\": 25,\n  \"password\": \"Password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            },
            "description": "Registra un nuevo usuario con rol 'client' por defecto"
          },
          "response": []
        },
        {
          "name": "Login - Obtener Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Guarda el token autom√°ticamente\n",
                  "if (pm.response.code === 200 || pm.response.code === 201) {\n",
                  "    var jsonData = pm.response.json();\n",
                  "    pm.collectionVariables.set('token', jsonData.token);\n",
                  "    pm.collectionVariables.set('user_id', jsonData.id);\n",
                  "    console.log('‚úÖ Token guardado:', jsonData.token.substring(0, 20) + '...');\n",
                  "    console.log('‚úÖ User ID guardado:', jsonData.id);\n",
                  "}\n"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@example.com\",\n  \"password\": \"admin123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            },
            "description": "Inicia sesi√≥n y obtiene un token JWT\n\n‚ö†Ô∏è IMPORTANTE: Este request guarda el token autom√°ticamente en la variable {{token}}"
          },
          "response": []
        },
        {
          "name": "GET - Obtener todos los usuarios",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth",
              "host": ["{{base_url}}"],
              "path": ["auth"]
            },
            "description": "Obtiene la lista completa de usuarios\n\n‚ö†Ô∏è Requiere token v√°lido en header Authorization"
          },
          "response": []
        },
        {
          "name": "GET - Obtener usuario por ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["auth", "{{user_id}}"]
            },
            "description": "Obtiene un usuario espec√≠fico por su ID\n\n‚ö†Ô∏è Usa la variable {{user_id}} que se guarda al hacer login"
          },
          "response": []
        },
        {
          "name": "PATCH - Actualizar usuario",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"fullName\": \"Nombre Actualizado\",\n  \"age\": 31\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["auth", "{{user_id}}"]
            },
            "description": "Actualiza los datos de un usuario\n\n‚ö†Ô∏è Solo admins pueden actualizar otros usuarios"
          },
          "response": []
        },
        {
          "name": "DELETE - Eliminar usuario",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["auth", "{{user_id}}"]
            },
            "description": "Elimina un usuario\n\n‚ö†Ô∏è Solo admins pueden eliminar usuarios\n‚ö†Ô∏è No se puede eliminar si es el √∫ltimo admin"
          },
          "response": []
        }
      ]
    },
    {
      "name": "üìã REFERENCIA - Credenciales despu√©s de Seed",
      "item": [
        {
          "name": "‚ÑπÔ∏è LEER - Credenciales disponibles",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/seed",
              "host": ["{{base_url}}"],
              "path": ["seed"]
            },
            "description": "DESPU√âS DE EJECUTAR /seed, estas credenciales estar√°n disponibles:\n\n| Email | Contrase√±a | Rol |\n|-------|-----------|-----|\n| admin@example.com | admin123 | admin |\n| coach@example.com | coach123 | coach |\n| client@example.com | client123 | client |\n| receptionist@example.com | recep123 | receptionist |\n\n**IMPORTANTE:**\n1. Primero ejecuta el endpoint /seed (arriba en esta colecci√≥n)\n2. Luego puedes hacer login con cualquiera de estas credenciales\n3. El token expira en 1 hora\n4. Para refrescar datos, ejecuta /seed de nuevo"
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": []
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": []
      }
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "token",
      "value": "",
      "type": "string",
      "description": "JWT Token - Se guarda autom√°ticamente al hacer login"
    },
    {
      "key": "user_id",
      "value": "",
      "type": "string",
      "description": "ID del usuario - Se guarda autom√°ticamente al hacer login"
    }
  ]
}